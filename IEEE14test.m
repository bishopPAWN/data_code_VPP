%% 基本参数
%节点并联对地之路参数
GND=[9,0,0.19;];
%对地支路数
ngnd=1;
%节点个数
nbb=14;
%线路支路数
ntr=20;
%最大迭代数
nitmax=1000;
%容许误差
error=1e-3;
%迭代次数初始化
nit=0;
%PQ、PV节点数
PQNodes=0;
PVNodes=0;
%节点注入功率
P0=zeros(1,nbb-1);
Q0=[];
%节点导纳矩阵
Y=zeros(nbb,nbb);
%% 线路及变压器参数矩阵
%       入  出   电阻      电抗      电导   电纳       有无    变比
%                                                  调压              
%                                                  变压器
%
tr=[
        1,  2,  .01938,  .05917,    0,   .0264*2,    0,    1.000;
        2,  3,  .04699,  .19797,    0,   .0219*2,    0,    1.000;
        2,  4,  .05811,  .17632,    0,   .0187*2,    0,    1.000;
        1,  5,  .05403,  .22304,    0,   .0246*2,    0,    1.000;
        2,  5,  .05695,  .17388,    0,   .0170*2,    0,    1.000;
        3,  4,  .06701,  .17103,    0,   .0173*2,    0,    1.000;
        4,  5,  .01335,  .04211,    0,   .0064*2,    0,    1.000;
        7,  8,  .00000,  .17615,    0,   .0000,      0,    1.000;
        7,  9,  .00000,  .11001,    0,   .0000,      0,    1.000;
        9,  10, .03181,  .08450,    0,   .0000,      0,    1.000;
        6,  11, .09498,  .19890,    0,   .0000,      0,    1.000;
        6,  12, .12291,  .15581,    0,   .0000,      0,    1.000;
        6,  13, .06615,  .13027,    0,   .0000,      0,    1.000;
        9,  14, .12711,  .27038,    0,   .0000,      0,    1.000;
        10, 11, .08205,  .19207,    0,   .0000,      0,    1.000;
        12, 13, .22092,  .19988,    0,   .0000,      0,    1.000;
        13, 14, .17093,  .34802,    0,   .0000,      0,    1.000;
        4,  7,  .00000,  .20912,    0,   .0000,      1,    0.978;    
        4,  9,  .00000,  .55618,    0,   .0000,      1,    0.969;    
        5,  6,  .00000,  .25202,    0,   .0000,      1,    0.932;    
  ]; 
%% 节点参数矩阵
%节点参数矩阵
%1是平衡节点
%2是pv节点
%3是pq节点
 
node=[
        %编号  类型  发动机         负荷               电压幅值       电压相位      
         1,   1,    0,           0,                1.0600,           0; 
         2,   2,    0.40,        0.2170+0.1270i,   1.0450,           0;  
         3,   2,    0,           0.9420+0.1900i,   1.0100,           0;  
         4,   3,    0,           0.4780-0.0390i,   1.0000,           0;  
         5,   3,    0,           0.0760+0.0160i,   1.0000,           0;  
         6,   2,    0,           0.1120+0.0750i,   1.0700,           0;  
         7,   3,    0,           0.0000+0.0000i,   1.0000,           0;  
         8,   2,    0,           0.0000+0.0000i,   1.0900,           0;  
         9,   3,    0,           0.2950+0.1660i,   1.0000,           0;  
         10,  3,    0,           0.0900+0.0580i,   1.0000,           0;
         11,  3,    0,           0.0350+0.0180i,   1.0000,           0;  
         12,  3,    0,           0.0610+0.0160i,   1.0000,           0;  
         13,  3,    0,           0.1350+0.0580i,   1.0000,           0;  
         14,  3,    0,           0.1490+0.0500i,   1.0000,           0;  
 ]; 
%% 调整节点编号及位置
% pq PV 平衡节点
node1=[];
node2=[];
node3=[];
for i=1:nbb
   if(node(i,2)==1)
       node1=node(i,:);
   elseif(node(i,2)==2)%PV节点
       node2=[node2;node(i,:)];
       PVNodes=PVNodes+1;
   elseif(node(i,2)==3)%PQ节点
       node3=[node3;node(i,:)];
       PQNodes=PQNodes+1;
   end
end
node=[node3;node2;node1];
clearvars node1 node2 node3
tr1=tr;
for k=1:nbb
    for i=1:ntr
        for j=1:2
            if(tr1(i,j)==node(k,1))
                tr(i,j)=k;
            end
        end
    end
end
%% 生成节点导纳矩阵
for i=1:ntr%非对角线
    Y(tr(i,1),tr(i,2))=-(1/tr(i,8))/(tr(i,3)+tr(i,4)*1i);
    Y(tr(i,2),tr(i,1))=-(1/tr(i,8))/(tr(i,3)+tr(i,4)*1i);
    Y(tr(i,2),tr(i,2))=Y(tr(i,2),tr(i,2))+1/(tr(i,3)+tr(i,4)*1i)+tr(i,6)/2*1i;
    Y(tr(i,1),tr(i,1))=Y(tr(i,1),tr(i,1))+(1/tr(i,8)^2)/(tr(i,3)+tr(i,4)*1i)+tr(i,6)/2*1i;
end
for cc=1:ngnd
i=4;
Y(i,i)=Y(i,i)+GND(cc,2)-GND(cc,3)*1i;
end
YR=real(Y);
YI=imag(Y);
%% 注入功率
Q0=zeros(1,nbb-1-PVNodes);
for i=1:nbb-1
    P0(i)=node(i,3)-real(node(i,4));
end
for i=1:nbb-1-PVNodes
    Q0(i)=0-imag(node(i,4));
end
%% 迭代（直角坐标法）
Jacobi=zeros(26);
D=zeros(1,26);
DU=zeros(1,26);
C=D/Jacobi;
point=1;
for i=1:2:26
    U(1,i)=node(point,5);
    point=point+1;
end
U(1,26)=0;
while(nit<nitmax)
   %生成雅各比矩阵
   for i=1:
       
   end
end